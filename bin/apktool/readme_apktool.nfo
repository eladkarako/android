Apktool v2.6.2-7e71ad-SNAPSHOT - a tool for reengineering Android apk files
with smali v2.5.2 and baksmali v2.5.2
Copyright 2010 Ryszard Wi≈õniewski <brut.alll@gmail.com>
Copyright 2010 Connor Tumbleson <connor.tumbleson@gmail.com>
Apache License 2.0 (https://www.apache.org/licenses/LICENSE-2.0)

usage: apktool [-q|--quiet OR -v|--verbose]
 -advance,--advanced   prints advance information.
 -version,--version    prints the version then exits
usage: apktool [-q|--quiet OR -v|--verbose] if|install-framework [options] <framework.apk>
 -p,--frame-path <dir>   Stores framework files into <dir>.
 -t,--tag <tag>          Tag frameworks using <tag>.
usage: apktool [-q|--quiet OR -v|--verbose] d[ecode] [options] <file_apk>
 -api,--api-level <API>   The numeric api-level of the file to generate, e.g. 14 for ICS.
 -b,--no-debug-info       don't write out debug info (.local, .param, .line, etc.)
 -f,--force               Force delete destination directory.
    --force-manifest      Decode the APK's compiled manifest, even if decoding of resources is set to "false".
 -k,--keep-broken-res     Use if there was an error and some resources were dropped, e.g.
                          "Invalid config flags detected. Dropping resources", but you
                          want to decode them anyway, even with errors. You will have to
                          fix them manually before building.
 -m,--match-original      Keeps files to closest to original as possible. Prevents rebuild.
    --no-assets           Do not decode assets.
 -o,--output <dir>        The name of folder that gets written. Default is apk.out
    --only-main-classes   Only disassemble the main dex classes (classes[0-9]*.dex) in the root.
 -p,--frame-path <dir>    Uses framework files located in <dir>.
 -r,--no-res              Do not decode resources.
 -s,--no-src              Do not decode sources.
 -t,--frame-tag <tag>     Uses framework files tagged by <tag>.
usage: apktool [-q|--quiet OR -v|--verbose] b[uild] [options] <app_path>
 -a,--aapt <loc>          Loads aapt from specified location.
 -api,--api-level <API>   The numeric api-level of the file to generate, e.g. 14 for ICS.
 -c,--copy-original       Copies original AndroidManifest.xml and META-INF. See project page for more info.
 -d,--debug               Sets android:debuggable to "true" in the APK's compiled manifest
 -f,--force-all           Skip changes detection and build all files.
 -n,--net-sec-conf        Adds a generic Network Security Configuration file in the output APK
 -nc,--no-crunch          Disable crunching of resource files during the build step.
 -o,--output <dir>        The name of apk that gets written. Default is dist/name.apk
 -p,--frame-path <dir>    Uses framework files located in <dir>.
    --use-aapt2           Upgrades apktool to use experimental aapt2 binary.
usage: apktool [-q|--quiet OR -v|--verbose] publicize-resources <file_path>

usage: apktool [-q|--quiet OR -v|--verbose] empty-framework-dir [options]
 -f,--force              Force delete destination directory.
 -p,--frame-path <dir>   Stores framework files into <dir>.
usage: apktool [-q|--quiet OR -v|--verbose] list-frameworks [options]
 -p,--frame-path <dir>   Stores framework files into <dir>.

For additional info, see: https://ibotpeaches.github.io/Apktool/ 
For smali/baksmali info, see: https://github.com/JesusFreke/smali
